}
livestock_production_all <- livestock_production %>% bind_rows()
# sum production?????
}
names(land_required)
feed_selected_land_required <- as.data.frame(land_required[as.data.frame(land_required$feed == feed,])
area_total <- sum(feed_selected_land_required$area_feed)
feed_item_selected <- as.data.frame(feed_selected[["feed_items"]])
feed_item_selected <- na_if(feed_item_selected, "NA") %>%
as.data.frame()
feed_item_selected[is.na(feed_item_selected)] <- 0
manure_fraction <- as.numeric(feed_item_selected$manure_fraction)
fertilizer_rate <- as.numeric(feed_item_selected$fertilizer_rate)
main_product_removal <- as.numeric(feed_item_selected$main_product_removal)
residue_removal <- as.numeric(feed_item_selected$residue_removal)
sum_n_content_manure_grazing <- energy_required[1] %>%
as.data.frame() %>%
summarise(sum(n_content_manure_grazing)) %>%
as.numeric()
yield_dm_ha <- as.numeric(dry_yield)*1000
main_product_removed_kg_ha <- yield_dm_ha*main_product_removal
n_content_manure_collected <- energy_required[1] %>%
as.data.frame() %>%
summarise(sum(n_content_manure_collected)) %>%
as.numeric()
animal_manure_collected <- n_content_manure_collected*manure_fraction
organic_n_imported <- manure_fraction*(as.numeric(para$purchased_manure)+as.numeric(para$purchased_compost)+as.numeric(para$purchased_organic_n)+as.numeric(para$purchased_bedding))
crop_residue_dm_ha <- as.numeric(feed_selected$residue_dry_yield)*1000
residue_removal <- as.numeric(feed_item_selected$residue_removal)
main_product_removed_kg <- area_total*main_product_removed_kg_ha
residue_removed_dm_ha <- crop_residue_dm_ha*residue_removal
residue_removed_kg <- area_total*residue_removed_dm_ha
annual_precipitation <- as.numeric(para[["annual_precipitation"]])
soil_n <- as.numeric(para[["soil_n"]])
ntot_kg_ha_20cm <- soil_n*20*as.numeric(para[["soil_bulk"]])*10
n_mineralized_kg_ha_year <- ntot_kg_ha_20cm*0.03
soil_c <- as.numeric(para[["soil_c"]])
soil_clay <- as.numeric(para[["soil_clay"]])
# N content (kg N/kg DM)
ncrop <- as.numeric(feed_selected$main_n)
# N content (kg N /kg DM)
nres <- as.numeric(feed_selected$residue_n)
# Mineral fertilizer
in1 <- area_total*fertilizer_rate
# calculate in2
# Atmospheric deposition
in3 <- 0.14*sqrt(annual_precipitation)*area_total
# Non-symbiotic N fixation
in4a <- ifelse(area_total > 0, (2 + (annual_precipitation - 1350) * 0.005) * area_total, 0)
# Symbiotic N-fixation
in4b <- n_fixing * area_total
# Crop yield  (kgN)
out1 <- area_total*main_product_removed_kg_ha*ncrop
# Crop residue (KgN)
out2 <- ifelse(feed_item_selected$source_type == "Main", 0, residue_removed_dm_ha * nres * area_total)
# Soil clay content
soil_clay <- soil_type <- para[["soil_clay"]]
# soil loss per plot per feed type
soil_loss_plot <- as.numeric(soil_erosion[soil_erosion$feed_type == feed,]$soil_loss_plot)
# Soil erosion
out5 <- soil_loss_plot*soil_n*1.5
# N content (kgN/kg DM ) from GHG parameters
nfertilizer <- 0
# write data into a dataframe
n_balance[[feed]] <- as.data.frame(cbind(feed,
n_fixing,
area_total,
fertilizer_rate,
animal_manure_collected,
organic_n_imported,
yield_dm_ha,
crop_residue_dm_ha,
residue_removal,
main_product_removal,
main_product_removed_kg_ha,
main_product_removed_kg,
residue_removed_dm_ha,
residue_removed_kg,
annual_precipitation,
soil_n,
ntot_kg_ha_20cm,
n_mineralized_kg_ha_year,
soil_c,
soil_clay,
ncrop,
nres,
in1,
in3,
in4a,
in4b,
out1,
out2,
soil_clay,
out5, nfertilizer))
}
n_balance_all <- n_balance %>%
bind_rows() %>%
mutate_at(c(-1), as.numeric)
# Animal manure (N kg) grazing, Organic N (kg N) total, Organic N (kg N/ha) total
n_balance_all <- n_balance_all %>%
mutate(animal_manure_grazing = sum_n_content_manure_grazing * (main_product_removed_kg+residue_removed_kg)/(sum(n_balance_all$main_product_removed_kg)+sum(n_balance_all$residue_removed_kg)),
organic_n_kg_total = animal_manure_grazing+animal_manure_collected+organic_n_imported,
organic_n_kg_per_ha = ifelse(is.na(organic_n_kg_total/area_total), 0, organic_n_kg_total/area_total))
# Manure (kgN)
n_balance_all$in2 <- n_balance_all$organic_n_kg_total
# N leached (kg N/ha/yr) @clay < 35%, >35% and <55%, >55%, Gaseous losses
n_balance_all <- n_balance_all %>%
mutate(out3a = (n_mineralized_kg_ha_year + fertilizer_rate + in2) * (0.021 * (annual_precipitation - 3.9) / 100),
out3b = (n_mineralized_kg_ha_year + fertilizer_rate + in2)* (0.014 * annual_precipitation + 0.71) / 100,
out3c = (n_mineralized_kg_ha_year + fertilizer_rate + in2) * (0.0071 * annual_precipitation + 5.4) / 100,
out3 = ifelse(soil_clay <=35, out3a, ifelse(soil_clay >= 35, out3c, out3b)),
out4 = (n_mineralized_kg_ha_year + fertilizer_rate + organic_n_kg_per_ha) * (-9.4 + 0.13 * soil_clay + 0.01 * annual_precipitation) / 100 * area_total,
nin = ifelse(area_total>0, in1+in2+in3+in4a+in4b, 0),
nout = ifelse(area_total>0, out1+out2+out3+out4+out5, 0),
nbalance_kg_n_total = nin-nout,
nbalance_kg_n_ha_total = ifelse(is.na(nbalance_kg_n_total/area_total), 0, nbalance_kg_n_total/area_total),
nbalance_feed_only_kg_n = ifelse(nbalance_kg_n_total==0, 0, ifelse(out2==0, nbalance_kg_n_total*out2/(out2+out1), 0)),
nbalance_feed_only_kg_n_ha = ifelse(is.na(nbalance_feed_only_kg_n/area_total), 0, nbalance_feed_only_kg_n/area_total))
# arrange values
n_balance_all <- n_balance_all %>%
select(feed,
n_fixing,
area_total,
fertilizer_rate,
animal_manure_grazing,
animal_manure_collected,
organic_n_imported,
organic_n_kg_total,
organic_n_kg_per_ha,
yield_dm_ha,
crop_residue_dm_ha,
residue_removal,
main_product_removal,
main_product_removed_kg_ha,
main_product_removed_kg,
residue_removed_dm_ha,
residue_removed_kg,
annual_precipitation,
soil_n,
ntot_kg_ha_20cm,
n_mineralized_kg_ha_year,
soil_c,
soil_clay,
nfertilizer,
ncrop,
nres,
in1,
in2,
in3,
in4a,
in4b,
out1,
out2,
out3a,
out3b,
out3c,
soil_clay,
out3,
out4,
out5,
nin,
nout,
nbalance_kg_n_total,
nbalance_kg_n_ha_total,
nbalance_feed_only_kg_n,
nbalance_feed_only_kg_n_ha)
# N balance (kgN/year)
nbalance_kg_year <- sum(n_balance_all$nbalance_feed_only_kg_n)
# Soil Erosion  ( t/farm/ time unit)
erosion_t_soil_year <- sum(as.numeric(soil_erosion$soil_loss_plot))
# Bind overall soil impacts
overall_soil_impacts <- as.data.frame(cbind(nbalance_kg_year, erosion_t_soil_year))
# Feed items specific N balance
feed_items_specific_n_balance <- n_balance_all %>%
mutate(inputs_kg_n_year = nin,
outputs_kg_n_year = nout,
nbalance_total_kg_n_year = nbalance_kg_n_total,
nbalance_total_kg_n_ha_year = nbalance_kg_n_ha_total,
nbalance_feed_only_kg_n_year = nbalance_feed_only_kg_n,
nbalance_feed_only_kg_n_ha_year = nbalance_feed_only_kg_n_ha,
nbalance_food_only_kg_n_year = nbalance_total_kg_n_year-nbalance_feed_only_kg_n_year,
nbalance_food_only_kg_n_ha_year = nbalance_total_kg_n_ha_year-nbalance_feed_only_kg_n_ha_year) %>%
select(-c(2:45))
# combine the soil and nitogen outputs
soil_impacts <- list(overall_soil_impacts, feed_items_specific_n_balance)
#returning results
return(soil_impacts)
}
# Compute meat and milk productivity
meat_milk_productivity <- function(para){
livestock_df <- para[["livestock"]]
livestock_category_names <- c(livestock_df$livestock_category_name)
livestock_production <- list()
for (livestock in livestock_category_names){
livestock_selected <- livestock_df[livestock_df$livestock_category_name == livestock,]
livestock_selected <- na_if(livestock_selected, "NA") %>%
as.data.frame()
livestock_selected[is.na(livestock_selected)] <- 0
# prodution per livestock
livestock_production[[livestock]] <- livestock_selected %>%
mutate(number = as.numeric(herd_composition),
lwg_per_animal = as.numeric(annual_growth),
tlu = number*as.numeric(body_weight)/250,
parturition_interval = as.numeric(livestock_selected$birth_interval),
total_lwg = number*lwg_per_animal,
meat_production_animal = total_lwg*as.numeric(carcass_fraction),
energy_kcal_year_meat = meat_production_animal*as.numeric(energy_meatcontent),
protein_kg_year_meat = meat_production_animal*as.numeric(protein_meatcontent)/100,
milk_production_animal = as.numeric(annual_milk),
total_milk = as.numeric(annual_milk)*(0.337+(0.116*as.numeric(fat_content)+(0.06*as.numeric(protein_milkcontent)))),
energy_kcal_year_milk = total_milk*as.numeric(energy_milkcontent),
protein_kg_year_milk = total_milk*as.numeric(protein_milkcontent)/100) %>%
select(-c(3:50))
}
livestock_production_all <- livestock_production %>% bind_rows()
# sum production?????
}
feed
feed_types <- unique(as.data.frame(land_required))
n_balance <- list()
feed <- feed_types[3]
feed
feed_types <- unique(as.data.frame(land_required$feed))
feed <- feed_types[1]
feed
feed_types <- unique(as.data.frame(land_required$feed))
feed_types
# load functions
source("./cleanedFunctions.R")
# Loading data
para <- fromJSON(paste0(path,"/data/example_JM_Test_1_1.json"),  flatten = TRUE)
# Feed quality calculation
feed_basket_quality <- feed_quality(para)
# clear your work space
rm(list = ls(all = TRUE))
# Load required packages
.packages = c("jsonlite","tidyverse", "lubridate", "data.table", "tidyr", "dplyr")
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
# Working directory
path <- "."
# load functions
source("./cleanedFunctions.R")
# Loading data
para <- fromJSON(paste0(path,"/data/example_JM_Test_1_1.json"),  flatten = TRUE)
# Feed quality calculation
feed_basket_quality <- feed_quality(para)
# Energy requirement
energy_required <- energy_requirement(para,feed_basket_quality)
# Land requirement
land_required <- land_requirement(feed_basket_quality, energy_required, para)
#soil erosion status
soil_erosion <- soil_health(para, land_required)
#water requirement
water_requirements <- water_requirement(para,land_required)
#Nitrogen balance
nitrogen_balance <- nitrogen_balance(para, land_required, soil_erosion)
# Compute meat and milk productivity
livestock_productivity <- meat_milk_productivity(para)
View(nitrogen_balance)
View(livestock_productivity)
livestock_df <- para[["livestock"]]
View(livestock_df)
livestock_category_names <- c(livestock_df$livestock_category_name)
livestock_category_names
livestock_df <- para[["livestock"]]
View(livestock_df)
names(livestock_df)
View(nitrogen_balance)
# Feed quality calculation
feed_basket_quality <- feed_quality(para)
# Energy requirement
energy_required <- energy_requirement(para,feed_basket_quality)
test <- as.data.frame(energy_required[1])
View(test)
names(test)
View(test)
cattle_manure <- sum(as.data.frame(energy_required[1]$annual_manure_produced))
energy_required[1]
energy_required[1] %>%
as.data.frame()
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(sum(annual_manure_produced))
View(cattle_manure)
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(total_production_year= sum(annual_manure_produced))
View(cattle_manure)
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(total_production_year= sum(annual_manure_produced)) %>%
as.numeric()
View(test)
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
View(cattle_manure)
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="cattle_manure",
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
View(cattle_manure)
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
View(cattle_manure)
# products dictionary
farm_gate_price <- function(x){
ifelse(x == "Cattle Manure", 0.0058,
ifelse(x == "Sheep Manure", NA,
ifelse(x == "Goat Manure", NA,
ifelse(x == "Beef", 3,
ifelse(x == "Buffalo meat", NA,
ifelse(x == "Goat/Lamb/Mutton", NA,
ifelse(x == "Pork", NA,
ifelse(x == "Cow Milk", 0.35,
ifelse(x == "Buffalo Milk", NA,
ifelse(x == "Goat/sheep milk", NA,
ifelse(x == "Labour", 3.5,
ifelse(x == "Urea", NA,
ifelse(x == "NPK", NA, NA)))))))))))))
}
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
retail_price_kg <- farm_gate_price(product)
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
retail_price_kg <- farm_gate_price(product),
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
View(cattle_manure)
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
retail_price_kg = farm_gate_price(product),
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
View(cattle_manure)
View(livestock_productivity)
# clear your work space
rm(list = ls(all = TRUE))
# Load required packages
.packages = c("jsonlite","tidyverse", "lubridate", "data.table", "tidyr", "dplyr")
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
# Working directory
path <- "."
# load functions
source("./cleanedFunctions.R")
# Loading data
para <- fromJSON(paste0(path,"/data/example_JM_Test_1_1.json"),  flatten = TRUE)
# Feed quality calculation
feed_basket_quality <- feed_quality(para)
# Energy requirement
energy_required <- energy_requirement(para,feed_basket_quality)
# Land requirement
land_required <- land_requirement(feed_basket_quality, energy_required, para)
#soil erosion status
soil_erosion <- soil_health(para, land_required)
#water requirement
water_requirements <- water_requirement(para,land_required)
#Nitrogen balance
nitrogen_balance <- nitrogen_balance(para, land_required, soil_erosion)
# Compute meat and milk productivity
livestock_productivity <- meat_milk_productivity(para)
View(livestock_productivity)
names(livestock_productivity)
# Cattle manure
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
# Beef
beef <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Beef",
total_production_year= sum(meat_production_animal),
estimated_production=sum(meat_production_animal))
View(beef)
# Beef
beef <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Beef",
total_production_year= sum(meat_production_animal),
estimated_production="")
View(beef)
test <- rbind.fill(list(cattle_manure, beef)
}
test <- rbind.fill(list(cattle_manure, beef))
library(plyr)
test <- rbind.fill(list(cattle_manure, beef))
View(test)
economics_all <- rbind.fill(list(cattle_manure, beef))
View(economics_all)
names(livestock_productivity)
# Cattle manure
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
# Beef
beef <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Beef",
total_production_year= sum(meat_production_animal),
estimated_production="")
# Beef
cow_milk <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Cow Milk",
total_production_year= sum(milk_production_animal),
estimated_production="")
economics_all <- rbind.fill(list(cattle_manure, beef, cow_milk))
View(economics_all)
economics_all <- rbind.fill(list(cattle_manure, beef, cow_milk))
economics_all <- economics_all %>%
mutate(retail_price_kg = farm_gate_price(product))
# products dictionary
farm_gate_price <- function(x){
ifelse(x == "Cattle Manure", 0.0058,
ifelse(x == "Sheep Manure", NA,
ifelse(x == "Goat Manure", NA,
ifelse(x == "Beef", 3,
ifelse(x == "Buffalo meat", NA,
ifelse(x == "Goat/Lamb/Mutton", NA,
ifelse(x == "Pork", NA,
ifelse(x == "Cow Milk", 0.35,
ifelse(x == "Buffalo Milk", NA,
ifelse(x == "Goat/sheep milk", NA,
ifelse(x == "Labour", 3.5,
ifelse(x == "Urea", NA,
ifelse(x == "NPK", NA, NA)))))))))))))
}
# Cattle manure
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
# Beef
beef <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Beef",
total_production_year= sum(meat_production_animal),
estimated_production="")
# Beef
cow_milk <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Cow Milk",
total_production_year= sum(milk_production_animal),
estimated_production="")
economics_all <- rbind.fill(list(cattle_manure, beef, cow_milk))
economics_all <- economics_all %>%
mutate(retail_price_kg = farm_gate_price(product))
View(economics_all)
economics_all <- rbind.fill(list(cattle_manure, beef, cow_milk))
economics_all <- economics_all %>%
mutate(retail_price_kg = farm_gate_price(product),
total_value_production= retail_price_kg*total_production_year)
View(economics_all)
economics_all <- economics_all %>%
mutate(retail_price_kg = farm_gate_price(product),
total_value_production= retail_price_kg*total_production_year,
estimated_production_value = ifelse(product=="Cattle Manure", retail_price_kg*estimated_production, ""))
retail_price_kg
economics_all <- rbind.fill(list(cattle_manure, beef, cow_milk))
economics_all <- economics_all %>%
mutate(retail_price_kg = farm_gate_price(product),
total_value_production= retail_price_kg*total_production_year,
estimated_production_value = ifelse(product=="Cattle Manure", retail_price_kg*estimated_production, NA))
View(economics_all)
names(economics_all)
economics_all <- economics_all %>%
mutate(retail_price_kg = farm_gate_price(product),
total_value_production= retail_price_kg*total_production_year)
View(economics_all)
# Cattle manure
cattle_manure <- energy_required[1] %>%
as.data.frame() %>%
summarise(product="Cattle Manure",
total_production_year= sum(annual_manure_produced),
estimated_production=sum(manure_collected))
# Beef
beef <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Beef",
total_production_year= sum(meat_production_animal),
estimated_production="")
# Beef
cow_milk <- livestock_productivity %>%
as.data.frame() %>%
summarise(product="Cow Milk",
total_production_year= sum(milk_production_animal),
estimated_production="")
economics_all <- rbind.fill(list(cattle_manure, beef, cow_milk)) %>%
mutate(retail_price_kg = farm_gate_price(product),
total_value_production= retail_price_kg*total_production_year,
estimated_production_value = ifelse(product=="Cattle Manure", retail_price_kg*estimated_production, ""))
View(livestock_productivity)
