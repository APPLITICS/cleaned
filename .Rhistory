View(para)
#getting the crop parameters
feed_production <- unnest(para[["feed_items"]], cols = c(feed_type_name))
View(feed_production)
#convert columns to numeric
cols_nam <- colnames(feed_production%>%select(kc_initial,kc_midseason,kc_late))
feed_production[cols_nam] <- sapply(feed_production[cols_nam],as.numeric)
#change NAs to 0
feed_production[is.na(feed_production)] <- 0
#getting the livestock parameters
livestock <- unnest(para[["livestock"]], cols = c())
#convert columns to numeric
cols_nam <- colnames(livestock%>%select(-livestock_category_code,-livestock_category_name))
#convert columns to numeric
cols_nam <- colnames(livestock%>%select(-livetype_code,-livetype_desc))
livestock[cols_nam] <- sapply(livestock[cols_nam],as.numeric)
#getting the livestock parameters
livestock <- unnest(para[["livestock"]], cols = c())
#area evapotranspiration
et <- as.numeric(para[["et"]])
#annual precipitation
annual_precipitation <- as.numeric(para[["annual_precipitation"]])
#computing water use per feed item
water_use_per_feed_item <- land_required%>%
group_by(feed)%>%
summarise(area_feed = sum(area_feed, na.rm = T),
area_non_feed = sum(area_non_feed, na.rm = T),
area_total = sum(area_total, na.rm = T))%>% #reformating land required
left_join(feed_production, by = c("feed"="feed_type_name"))%>%
mutate(fraction_of_land_required = area_feed/sum(area_feed,na.rm = T),
kc_average = (kc_initial+kc_midseason+kc_late)/3,
kc_frac = fraction_of_land_required*kc_average,
ET = kc_frac*et,
water_use = ET*sum(area_feed),
feed_water_use = ifelse(is.nan(water_use*(1-(area_non_feed/area_total))),0,(water_use*(1-(area_non_feed/area_total)))),
non_feed_water_use = water_use-feed_water_use)%>%
select(feed,area_feed,area_non_feed,area_total,kc_average,kc_frac,ET,water_use,feed_water_use,non_feed_water_use)
#computing water use for production
ET <- et*sum(water_use_per_feed_item$kc_frac)
fraction_of_precipitation_used_for_feed_production <- ET/annual_precipitation
total_water_use <- ET*sum(water_use_per_feed_item$area_feed)
water_use_fpcm <- total_water_use/sum(livestock$herd_composition*livestock$annual_milk*(0.337+(0.116*livestock$fat_content)+(0.06*livestock$protein_milkcontent)))
water_use_meat <- total_water_use/sum(livestock$herd_composition*livestock$annual_growth*livestock$carcass_fraction)
water_use_protein <- total_water_use/(sum(livestock$herd_composition*livestock$annual_growth*livestock$carcass_fraction*(livestock$protein_meatcontent/100))+
sum(livestock$herd_composition*livestock$annual_milk*(0.337+(0.116*livestock$fat_content)+(0.06*livestock$protein_milkcontent))*(livestock$protein_milkcontent/100)))
#merging water use items for production
water_use_for_production <- cbind(ET,fraction_of_precipitation_used_for_feed_production,total_water_use,water_use_fpcm,water_use_meat,water_use_protein)
water_use <- list(water_use_per_feed_item = water_use_per_feed_item,
water_use_for_production = water_use_per_feed_item)
#returning results
return(water_use)
View(water_use_per_feed_item)
View(feed_production)
View(water_use_for_production)
View(water_use_per_feed_item)
water_use_per_feed_item <- land_required%>%
group_by(feed)%>%
summarise(area_feed = sum(area_feed, na.rm = T),
area_non_feed = sum(area_non_feed, na.rm = T),
area_total = sum(area_total, na.rm = T))%>% #reformating land required
left_join(feed_production, by = c("feed"="feed_type_name"))%>%
mutate(fraction_of_land_required = area_feed/sum(area_feed,na.rm = T),
kc_average = (kc_initial+kc_midseason+kc_late)/3,
kc_frac = fraction_of_land_required*kc_average,
ET = kc_frac*et,
water_use = ET*sum(area_feed),
feed_water_use = ifelse(is.nan(water_use*(1-(area_non_feed/area_total))),0,(water_use*(1-(area_non_feed/area_total)))),
non_feed_water_use = water_use-feed_water_use)
names(water_use_per_feed_item)
View(land_required)
rm(list = ls())
para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
feed_basket_quality <- feed_quality(para)
energy_required <- energy_requirement(para,feed_basket_quality)
land_required <- land_requirement(feed_basket_quality, energy_required, para)
#getting the crop parameters
feed_production <- unnest(para[["feed_items"]], cols = c(feed_type_name))
#convert columns to numeric
cols_nam <- colnames(feed_production%>%select(kc_initial,kc_midseason,kc_late))
#getting the livestock parameters
livestock <- unnest(para[["livestock"]], cols = c())
#area evapotranspiration
et <- as.numeric(para[["et"]])
#annual precipitation
annual_precipitation <- as.numeric(para[["annual_precipitation"]])
#computing water use per feed item
water_use_per_feed_item <- land_required%>%
group_by(feed)%>%
summarise(area_feed = sum(area_feed, na.rm = T),
area_non_feed = sum(area_non_feed, na.rm = T),
area_total = sum(area_total, na.rm = T))%>% #reformating land required
left_join(feed_production, by = c("feed"="feed_type_name"))%>%
mutate(fraction_of_land_required = area_feed/sum(area_feed,na.rm = T),
kc_average = (kc_initial+kc_midseason+kc_late)/3,
kc_frac = fraction_of_land_required*kc_average,
ET = kc_frac*et,
water_use = ET*sum(area_feed),
feed_water_use = ifelse(is.nan(water_use*(1-(area_non_feed/area_total))),0,(water_use*(1-(area_non_feed/area_total)))),
non_feed_water_use = water_use-feed_water_use)%>%
select(feed,area_feed,area_non_feed,area_total,kc_average,kc_frac,ET,water_use,feed_water_use,non_feed_water_use)
View(water_use_per_feed_item)
#computing water use for production
ET <- et*sum(water_use_per_feed_item$kc_frac)
fraction_of_precipitation_used_for_feed_production <- ET/annual_precipitation
total_water_use <- ET*sum(water_use_per_feed_item$area_feed)
water_use_fpcm <- total_water_use/sum(livestock$herd_composition*livestock$annual_milk*(0.337+(0.116*livestock$fat_content)+(0.06*livestock$protein_milkcontent)))
water_use_meat <- total_water_use/sum(livestock$herd_composition*livestock$annual_growth*livestock$carcass_fraction)
water_use_protein <- total_water_use/(sum(livestock$herd_composition*livestock$annual_growth*livestock$carcass_fraction*(livestock$protein_meatcontent/100))+
sum(livestock$herd_composition*livestock$annual_milk*(0.337+(0.116*livestock$fat_content)+(0.06*livestock$protein_milkcontent))*(livestock$protein_milkcontent/100)))
#merging water use items for production
water_use_for_production <- cbind(ET,fraction_of_precipitation_used_for_feed_production,total_water_use,water_use_fpcm,water_use_meat,water_use_protein)
View(water_use_per_feed_item)
View(water_use_for_production)
View(t(water_use_for_production))
#computing water use per feed item
water_use_per_feed_item <- land_required%>%
group_by(feed)%>%
summarise(area_feed = sum(area_feed, na.rm = T),
area_non_feed = sum(area_non_feed, na.rm = T),
area_total = sum(area_total, na.rm = T))%>% #reformating land required
left_join(feed_production, by = c("feed"="feed_type_name"))%>%
mutate(fraction_of_land_required = area_feed/sum(area_feed,na.rm = T),
kc_average = (kc_initial+kc_midseason+kc_late)/3,
kc_frac = fraction_of_land_required*kc_average,
ET = kc_frac*et,
water_use = ET*sum(area_feed),
feed_water_use = ifelse(is.nan(water_use*(1-(area_non_feed/area_total))),0,(water_use*(1-(area_non_feed/area_total)))),
non_feed_water_use = water_use-feed_water_use)%>%
select(feed,kc_average,kc_frac,water_use,feed_water_use,non_feed_water_use)
View(water_use_per_feed_item)
#merging water use items for production
water_use_for_production <- t(cbind(ET,
fraction_of_precipitation_used_for_feed_production,
total_water_use,
water_use_fpcm,
water_use_meat,
water_use_protein))
View(water_use_for_production)
library(cleaned)
rm(list = ls())
para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
feed_basket_quality <- feed_quality(para)
energy_required <- energy_requirement(para,feed_basket_quality)
land_required <- land_requirement(feed_basket_quality, energy_required, para)
soil_erosion <- soil_health(para, land_required)
water_required <- water_requirement(para, land_required)
rm(list = ls())
para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
feed_basket_quality <- feed_quality(para)
energy_required <- energy_requirement(para,feed_basket_quality)
land_required <- land_requirement(feed_basket_quality, energy_required, para)
soil_erosion <- soil_health(para, land_required)
#getting the crop parameters
feed_production <- unnest(para[["feed_items"]], cols = c(feed_type_name))
#getting the livestock parameters
livestock <- unnest(para[["livestock"]], cols = c())
#area evapotranspiration
et <- as.numeric(para[["et"]])
#annual precipitation
annual_precipitation <- as.numeric(para[["annual_precipitation"]])
#computing water use per feed item
water_use_per_feed_item <- land_required%>%
group_by(feed)%>%
summarise(area_feed = sum(area_feed, na.rm = T),
area_non_feed = sum(area_non_feed, na.rm = T),
area_total = sum(area_total, na.rm = T))%>% #reformating land required
left_join(feed_production, by = c("feed"="feed_type_name"))%>%
mutate(fraction_of_land_required = area_feed/sum(area_feed,na.rm = T),
kc_average = (kc_initial+kc_midseason+kc_late)/3,
kc_frac = fraction_of_land_required*kc_average,
ET = kc_frac*et,
water_use = ET*sum(area_feed),
feed_water_use = ifelse(is.nan(water_use*(1-(area_non_feed/area_total))),0,
(water_use*(1-(area_non_feed/area_total)))),
non_feed_water_use = water_use-feed_water_use)%>%
select(feed,kc_average,kc_frac,water_use,feed_water_use,non_feed_water_use)
#computing water use for production
ET <- et*sum(water_use_per_feed_item$kc_frac)
fraction_of_precipitation_used_for_feed_production <- ET/annual_precipitation
total_water_use <- ET*sum(water_use_per_feed_item$area_feed)
water_use_fpcm <- total_water_use/sum(livestock$herd_composition*livestock$annual_milk*(0.337+(0.116*livestock$fat_content)+(0.06*livestock$protein_milkcontent)))
water_use_per_feed_item <- land_required%>%
group_by(feed)%>%
summarise(area_feed = sum(area_feed, na.rm = T),
area_non_feed = sum(area_non_feed, na.rm = T),
area_total = sum(area_total, na.rm = T))%>% #reformating land required
left_join(feed_production, by = c("feed"="feed_type_name"))%>%
mutate(fraction_of_land_required = area_feed/sum(area_feed,na.rm = T),
kc_average = (kc_initial+kc_midseason+kc_late)/3,
kc_frac = fraction_of_land_required*kc_average,
ET = kc_frac*et,
water_use = ET*sum(area_feed),
feed_water_use = ifelse(is.nan(water_use*(1-(area_non_feed/area_total))),0,
(water_use*(1-(area_non_feed/area_total)))),
non_feed_water_use = water_use-feed_water_use)
View(water_use_per_feed_item)
View(feed_basket_quality)
View(land_required)
nitrogen_balance <- n_balance(para, land_required, soil_erosion)
livestock_productivity <- land_productivity(para)
economics <- economics_payback(para, energy_required)
biomass <- biomass_calculation(para, land_required)
livestock <- para[["livestock"]]
#convert columns to numeric
cols_nam <- colnames(livestock%>%select(-livestock_category_code,-livestock_category_name))
library(cleaned)
library(cleaned)
library(jsonlite)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
# Load required packages
.packages = c("foreign", "tidyverse", "haven","sf","rstudioapi","srvyr","zoo")
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
# Working directory
setwd(dirname(getActiveDocumentContext()$path))
path <- "."
household <- read.dta("./data/UGA_DHS_Data/household_data.dta")
household$date <- as.yearmon(paste0(household$HV007,"-",household$HV006))
household$HV246AB <-
child_diet <- read.dta("./data/UGA_DHS_Data/child_minimu_dietary_diversity.dta")
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls(all = TRUE))
# Load required packages
.packages = c("jsonlite", "foreign", "tidyverse", "data.table", "haven","sf","rstudioapi")
.inst <- .packages %in% installed.packages()
if(length(.packages[!.inst]) > 0) install.packages(.packages[!.inst])
lapply(.packages, require, character.only=TRUE)
# Working directory
setwd(dirname(getActiveDocumentContext()$path))
path <- "."
selected_variables <- fromJSON("selected_variables.json",  flatten = TRUE)
women_variables <- selected_variables[["woman"]]
knitr::kable(women_variables,position = "left")
child_variables <- selected_variables[["child"]]
knitr::kable(child_variables,position = "left")
household_variables <- selected_variables[["household"]]
knitr::kable(household_variables,position = "left")
dhs_dirs <-c("UG_2006_DHS_11052020_1337_124853","UG_2011_DHS_11052020_1336_124853",
"UG_2016_DHS_11092020_713_124853")
year_data <- c("DHS_2006","DHS_2011","DHS_2016")
for (i in 1:length(dhs_dirs)) {
dirs <- dir(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i]))
#Loading female data
women_folder <- dirs[grep("IR",dirs)]
ir <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder),pattern=".SAV")
temp_ir_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder,"/",ir),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(women_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading child data
child_folder <- dirs[grep("KR",dirs)]
kr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder),pattern=".SAV")
temp_kr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder,"/",kr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(child_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading household data
household_folder <- dirs[grep("HR",dirs)]
hr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder),pattern=".SAV")
temp_hr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder,"/",hr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(household_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading spatial data
spatial_folder <- dirs[grep("GE",dirs)]
ge <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder),pattern=".shp")
temp_ge_data <- st_read(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder,"/",ge[1]))%>%
mutate(data_code = year_data[i])
#Merge the data
if (i==1) {
women_data <- temp_ir_data
child_data <- temp_kr_data
household_data <- temp_hr_data
spatial_data <- temp_ge_data
}else{
women_data <- rbind(women_data,temp_ir_data)
child_data <- rbind(child_data,temp_kr_data)
household_data <- rbind(household_data,temp_hr_data)
spatial_data <- rbind(spatial_data,temp_ge_data)
}
print(i)
}
mother_minimu_dietary_diversity <- women_data %>% filter(V208>=1)%>%
mutate(mdd_g_1 = ifelse(V472E==1|V472F==1|V472T==1,1,0),
mdd_g_2n3 = ifelse(V472O==1,1,0),
mdd_g_4 = ifelse(V471A==1|V472P==1,1,0),
mdd_g_5 = ifelse(V472H==1|V472M==1|V472N==1,1,0),
mdd_g_6 = ifelse(V472G==1,1,0),
mdd_g_7 = ifelse(V472J==1,1,0),
mdd_g_8 = ifelse(V472I==1|V472K==1,1,0),
mdd_g_10 = ifelse(V472L==1,1,0),
mdd_g_i = ifelse(V472Q==1,1,0),
mdd_g_ii = ifelse(V472R==1,1,0),
mother_diet_diversity = mdd_g_1+mdd_g_2n3+mdd_g_4+mdd_g_5+
mdd_g_6+mdd_g_6+mdd_g_7+mdd_g_8+mdd_g_10)
attr(mother_minimu_dietary_diversity,"var.labels") <- c(women_variables$variable_description,
"mdd_g_1","mdd_g_2n3","mdd_g_4","mdd_g_5","mdd_g_6",
"mdd_g_7","mdd_g_8","mdd_g_10","mdd_g_i","mdd_g_ii",
"mother_diet_diversity")
write.dta(mother_minimu_dietary_diversity,file=paste0(path,
"/Data/UGA_DHS_Data/mother_minimu_dietary_diversity.dta"))
knitr::kable(table(mother_minimu_dietary_diversity$data_code,mother_minimu_dietary_diversity$mother_diet_diversity),position = "left")
child_minimu_dietary_diversity <- women_data %>%
mutate(B8= ifelse(B8.01>=6|B8.02>=6|B8.03>=6|B8.04>=6|B8.05>=6|B8.06>=6|B8.07>=6|
B8.08>=6|B8.09>=6|B8.10>=6|B8.11>=6|B8.12>=6|B8.13>=6|B8.14>=6|
B8.15>=6|B8.16>=6|B8.17>=6|B8.18>=6|B8.19>=6|B8.20>=6,1,0))%>%
filter(B8==1)%>%
mutate(cdd_g_1 = ifelse(V414E==1|V414F==1|V414T==1,1,0),
cdd_g_2 = ifelse(V414O==1,1,0),
cdd_g_3 = ifelse(V414P==1,1,0),
cdd_g_4 = ifelse(V414H==1|V414M==1|V414N==1,1,0),
cdd_g_5 = ifelse(V414G==1,1,0),
cdd_g_6 = ifelse(V414J==1|V414I==1|V414K==1,1,0),
cdd_g_7 = ifelse(V414L==1,1,0),
cdd_g_i = ifelse(V414Q==1,1,0),
cdd_g_ii = ifelse(V414R==1,1,0),
child_diet_diversity = cdd_g_1+cdd_g_2+cdd_g_3+cdd_g_4+cdd_g_5+cdd_g_6+cdd_g_7)
attr(child_minimu_dietary_diversity,"var.labels") <- c(women_variables$variable_description,"B8",
"cdd_g_1","cdd_g_2","cdd_g_3","cdd_g_4","cdd_g_5",
"cdd_g_6","cdd_g_7","cdd_g_i","cdd_g_ii",
"child_diet_diversity")
write.dta(child_minimu_dietary_diversity,file=paste0(path,
"/Data/UGA_DHS_Data/child_minimu_dietary_diversity.dta"))
knitr::kable(table(child_minimu_dietary_diversity$data_code,child_minimu_dietary_diversity$child_diet_diversity),position = "left")
child_Nutritional <- child_data%>%
mutate(HW8 = ifelse(HW8 == 9998, 9998,HW8/100),
HW5 = ifelse(HW5 == 9998, 9998,HW5/100),
wasting = ifelse(HW8< -3,1, #Severely wasted
ifelse(HW8>= -3 & HW8< -2,2, #Moderately wasted
ifelse(HW8>= -2 & HW8<= 2,4, #Normal
ifelse(HW8 > 2 & HW8 < 9997,3, #Overweight
ifelse(HW8 == 9998,8, #Flagged cases
ifelse(HW8 == 9999,9,NA)))))),#Missing
Stunting = ifelse(HW5< -3,1, #Severely Stunted
ifelse(HW5< -2 & HW5>= -3,2, #Moderately Stunted
ifelse(HW5 == 9998,8, #Flagged cases
ifelse(HW5 == 9999,9, #Missing
ifelse(is.na(HW5),NA,4)))))) #Normal
attr(child_Nutritional,"var.labels") <- c(child_variables$variable_description,
"data_code","wasting","Stunting")
write.dta(child_Nutritional,file=paste0(path,"/Data/UGA_DHS_Data/child_Nutritional.dta"))
knitr::kable(table(child_Nutritional$data_code,child_Nutritional$wasting),position = "left")
knitr::kable(table(child_Nutritional$data_code,child_Nutritional$Stunting),position = "left")
uganda_districts <- st_read(paste0(path,"/Data/Dirishajensen/Uganda.Districts.shp"))
View(mother_minimu_dietary_diversity)
women_bmi <- women_data %>% filter(V208==0 | B19.01 > 1)%>%
filter(V213 != 1)
selected_variables <- fromJSON("selected_variables.json",  flatten = TRUE)
women_variables <- selected_variables[["woman"]]
knitr::kable(women_variables,position = "left")
child_variables <- selected_variables[["child"]]
knitr::kable(child_variables,position = "left")
household_variables <- selected_variables[["household"]]
knitr::kable(household_variables,position = "left")
dhs_dirs <-c("UG_2006_DHS_11052020_1337_124853","UG_2011_DHS_11052020_1336_124853",
"UG_2016_DHS_11092020_713_124853")
year_data <- c("DHS_2006","DHS_2011","DHS_2016")
for (i in 1:length(dhs_dirs)) {
dirs <- dir(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i]))
#Loading female data
women_folder <- dirs[grep("IR",dirs)]
ir <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder),pattern=".SAV")
temp_ir_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder,"/",ir),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(women_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading child data
child_folder <- dirs[grep("KR",dirs)]
kr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder),pattern=".SAV")
temp_kr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder,"/",kr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(child_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading household data
household_folder <- dirs[grep("HR",dirs)]
hr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder),pattern=".SAV")
temp_hr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder,"/",hr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(household_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading spatial data
spatial_folder <- dirs[grep("GE",dirs)]
ge <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder),pattern=".shp")
temp_ge_data <- st_read(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder,"/",ge[1]))%>%
mutate(data_code = year_data[i])
#Merge the data
if (i==1) {
women_data <- temp_ir_data
child_data <- temp_kr_data
household_data <- temp_hr_data
spatial_data <- temp_ge_data
}else{
women_data <- rbind(women_data,temp_ir_data)
child_data <- rbind(child_data,temp_kr_data)
household_data <- rbind(household_data,temp_hr_data)
spatial_data <- rbind(spatial_data,temp_ge_data)
}
print(i)
}
selected_variables <- fromJSON("selected_variables.json",  flatten = TRUE)
women_variables <- selected_variables[["woman"]]
knitr::kable(women_variables,position = "left")
child_variables <- selected_variables[["child"]]
knitr::kable(child_variables,position = "left")
household_variables <- selected_variables[["household"]]
knitr::kable(household_variables,position = "left")
dhs_dirs <-c("UG_2006_DHS_11052020_1337_124853","UG_2011_DHS_11052020_1336_124853",
"UG_2016_DHS_11092020_713_124853")
year_data <- c("DHS_2006","DHS_2011","DHS_2016")
for (i in 1:length(dhs_dirs)) {
dirs <- dir(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i]))
#Loading female data
women_folder <- dirs[grep("IR",dirs)]
ir <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder),pattern=".SAV")
temp_ir_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder,"/",ir),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(women_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading child data
child_folder <- dirs[grep("KR",dirs)]
kr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder),pattern=".SAV")
temp_kr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder,"/",kr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(child_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading household data
household_folder <- dirs[grep("HR",dirs)]
hr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder),pattern=".SAV")
temp_hr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder,"/",hr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(household_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading spatial data
spatial_folder <- dirs[grep("GE",dirs)]
ge <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder),pattern=".shp")
temp_ge_data <- st_read(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder,"/",ge[1]))%>%
mutate(data_code = year_data[i])
#Merge the data
if (i==1) {
women_data <- temp_ir_data
child_data <- temp_kr_data
household_data <- temp_hr_data
spatial_data <- temp_ge_data
}else{
women_data <- rbind(women_data,temp_ir_data)
child_data <- rbind(child_data,temp_kr_data)
household_data <- rbind(household_data,temp_hr_data)
spatial_data <- rbind(spatial_data,temp_ge_data)
}
print(i)
}
selected_variables <- fromJSON("selected_variables.json",  flatten = TRUE)
women_variables <- selected_variables[["woman"]]
knitr::kable(women_variables,position = "left")
child_variables <- selected_variables[["child"]]
knitr::kable(child_variables,position = "left")
household_variables <- selected_variables[["household"]]
knitr::kable(household_variables,position = "left")
dhs_dirs <-c("UG_2006_DHS_11052020_1337_124853","UG_2011_DHS_11052020_1336_124853",
"UG_2016_DHS_11092020_713_124853")
year_data <- c("DHS_2006","DHS_2011","DHS_2016")
for (i in 1:length(dhs_dirs)) {
dirs <- dir(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i]))
#Loading female data
women_folder <- dirs[grep("IR",dirs)]
ir <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder),pattern=".SAV")
temp_ir_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",women_folder,"/",ir),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(women_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading child data
child_folder <- dirs[grep("KR",dirs)]
kr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder),pattern=".SAV")
temp_kr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",child_folder,"/",kr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(child_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading household data
household_folder <- dirs[grep("HR",dirs)]
hr <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder),pattern=".SAV")
temp_hr_data <- read.spss(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",household_folder,"/",hr),
to.data.frame=TRUE, use.value.labels=FALSE)%>%
select(c(household_variables$variable_code))%>%
mutate(data_code = year_data[i])
#Loading spatial data
spatial_folder <- dirs[grep("GE",dirs)]
ge <- list.files(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder),pattern=".shp")
temp_ge_data <- st_read(paste0(path,"/Data/UGA_DHS_Data/",dhs_dirs[i],"/",spatial_folder,"/",ge[1]))%>%
mutate(data_code = year_data[i])
#Merge the data
if (i==1) {
women_data <- temp_ir_data
child_data <- temp_kr_data
household_data <- temp_hr_data
spatial_data <- temp_ge_data
}else{
women_data <- rbind(women_data,temp_ir_data)
child_data <- rbind(child_data,temp_kr_data)
household_data <- rbind(household_data,temp_hr_data)
spatial_data <- rbind(spatial_data,temp_ge_data)
}
print(i)
}
women_bmi <- women_data %>% filter(V208==0 | B8.01 > 1)%>%
filter(V213 != 1)%>%
mutate(BMI = V445/100)
attr(women_bmi,"var.labels") <- c(women_variables$variable_description,"BMI")
write.dta(women_bmi,file=paste0(path,
"/Data/UGA_DHS_Data/women_bmi.dta"))
View(women_bmi)
