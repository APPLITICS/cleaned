scenarioList[[i]] <- data.frame(scenario,
average_annual_milk_kg_yr,
soil_mining_perc,
soil_leaching_perc,
erosion_tyr,
erosion_thayr,
erosion_kgsoil_kg_fpcm,
land_requirement_ha,
total_land_required_ha_mt_fpcm,
ghgtot_t_co2eq_yr,
ghgtot_t_co2eq_ha_yr,
ghgmilk_kg_co2eq_kg,
ghgmeat_kg_co2eq_kg,
ghgprotein_kg_co2eq_kg,
percent_of_precipitation_used_for_feed_production,
water_m3_yr,
waterha_m3_ha,
water_use_perkg_fpcm,
water_use_perkg_meat,
water_use_perkg_protein)
}
}
diff <- calculate_differences("C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/steve_test.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
for (i in 2:length(outputList)){
scenario <- i
output <- jsonlite::fromJSON(outputList[[i]], flatten = TRUE)
nitrogen_balance <- output[["nitrogen_balance"]]
soil_mining_perc <- sum(nitrogen_balance[nitrogen_balance$area_total > 0.9,]$area_total)*100/sum(nitrogen_balance$area_total)
soil_leaching_perc <- sum(nitrogen_balance[nitrogen_balance$area_total < 0.5,]$area_total)*100/sum(nitrogen_balance$area_total)
erosion_tyr <- sum(as.numeric(output[["soil_erosion"]]$soil_loss_plot))
land_required <- output[["land_required"]] %>%
dplyr::bind_rows()
erosion_thayr <- sum(land_required$area_feed)/erosion_tyr
average_annual_milk_kg_yr <- sum(output[["livestock_productivity"]]$total_milk)
erosion_kgsoil_kg_fpcm <- ifelse(is.na(erosion_tyr/sum(output[["livestock_productivity"]]$total_milk)), 0, erosion_tyr/sum(output[["livestock_productivity"]]$total_milk))*1000
land_requirement_ha <- sum(land_required$area_feed)
total_land_required_ha_mt_fpcm <- ifelse(is.na(land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk)), 0, land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk))*1000
ghg_emission <- output[["ghg_emission"]]
ghgtot_t_co2eq_yr <- (sum(ghg_emission$kg_per_ha,na.rm = T)/1000)*land_requirement_ha
ghgtot_t_co2eq_ha_yr <- sum(ghg_emission$kg_per_ha,na.rm = T)/1000
ghgmeat_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal))
ghgmilk_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk))
tot_protein_kg_year_meat <- sum(output[["livestock_productivity"]]$protein_kg_year_meat)
tot_protein_kg_year_milk <- sum(output[["livestock_productivity"]]$protein_kg_year_milk)
ghgprotein_kg_co2eq_kg <- ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk == 0,0,
ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk != 0, ghgtot_t_co2eq_yr/tot_protein_kg_year_milk,
ifelse(tot_protein_kg_year_meat!=0 & tot_protein_kg_year_milk == 0,ghgtot_t_co2eq_yr/tot_protein_kg_year_meat,
(ghgtot_t_co2eq_yr/tot_protein_kg_year_milk)+(ghgtot_t_co2eq_yr/tot_protein_kg_year_meat))))
water_requirement <- output[["water_required"]]
water_use_for_production <- as.data.frame(water_requirement[["water_use_for_production"]])
percent_of_precipitation_used_for_feed_production <- water_use_for_production[which(water_use_for_production$Names=="fraction_of_precipitation_used_for_feed_production"),2]*100
water_m3_yr <-water_use_for_production[which(water_use_for_production$Names=="total_water_use"),2]
waterha_m3_ha <- water_m3_yr/sum(land_required$area_feed)
water_use_perkg_fpcm <- water_use_for_production[which(water_use_for_production$Names=="water_use_fpcm"),2]
water_use_perkg_meat <- water_use_for_production[which(water_use_for_production$Names=="water_use_meat"),2]
water_use_perkg_protein <- water_use_for_production[which(water_use_for_production$Names=="water_use_protein"),2]
scenarioList[[i]] <- data.frame(scenario,
average_annual_milk_kg_yr,
soil_mining_perc,
soil_leaching_perc,
erosion_tyr,
erosion_thayr,
erosion_kgsoil_kg_fpcm,
land_requirement_ha,
total_land_required_ha_mt_fpcm,
ghgtot_t_co2eq_yr,
ghgtot_t_co2eq_ha_yr,
ghgmilk_kg_co2eq_kg,
ghgmeat_kg_co2eq_kg,
ghgprotein_kg_co2eq_kg,
percent_of_precipitation_used_for_feed_production,
water_m3_yr,
waterha_m3_ha,
water_use_perkg_fpcm,
water_use_perkg_meat,
water_use_perkg_protein)
}
View(scenarioList)
lst = list(1, 2, 3)
lst[[1]] <- NULL
length(lst)
lst = list(1, 2, 3)
length(lst)
rm(list = ls())
outputList <- list("C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/steve_test.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
output_path <- outputList[[1]] # output directory
outputList[[1]] <- NULL
if (length(outputList) == 0) {
stop("No files in source directory")
} else {
scenarioList <- list()
for (i in 2:length(outputList)){
scenario <- i
output <- jsonlite::fromJSON(outputList[[i]], flatten = TRUE)
nitrogen_balance <- output[["nitrogen_balance"]]
soil_mining_perc <- sum(nitrogen_balance[nitrogen_balance$area_total > 0.9,]$area_total)*100/sum(nitrogen_balance$area_total)
soil_leaching_perc <- sum(nitrogen_balance[nitrogen_balance$area_total < 0.5,]$area_total)*100/sum(nitrogen_balance$area_total)
erosion_tyr <- sum(as.numeric(output[["soil_erosion"]]$soil_loss_plot))
land_required <- output[["land_required"]] %>%
dplyr::bind_rows()
erosion_thayr <- sum(land_required$area_feed)/erosion_tyr
average_annual_milk_kg_yr <- sum(output[["livestock_productivity"]]$total_milk)
erosion_kgsoil_kg_fpcm <- ifelse(is.na(erosion_tyr/sum(output[["livestock_productivity"]]$total_milk)), 0, erosion_tyr/sum(output[["livestock_productivity"]]$total_milk))*1000
land_requirement_ha <- sum(land_required$area_feed)
total_land_required_ha_mt_fpcm <- ifelse(is.na(land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk)), 0, land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk))*1000
ghg_emission <- output[["ghg_emission"]]
ghgtot_t_co2eq_yr <- (sum(ghg_emission$kg_per_ha,na.rm = T)/1000)*land_requirement_ha
ghgtot_t_co2eq_ha_yr <- sum(ghg_emission$kg_per_ha,na.rm = T)/1000
ghgmeat_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal))
ghgmilk_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk))
tot_protein_kg_year_meat <- sum(output[["livestock_productivity"]]$protein_kg_year_meat)
tot_protein_kg_year_milk <- sum(output[["livestock_productivity"]]$protein_kg_year_milk)
ghgprotein_kg_co2eq_kg <- ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk == 0,0,
ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk != 0, ghgtot_t_co2eq_yr/tot_protein_kg_year_milk,
ifelse(tot_protein_kg_year_meat!=0 & tot_protein_kg_year_milk == 0,ghgtot_t_co2eq_yr/tot_protein_kg_year_meat,
(ghgtot_t_co2eq_yr/tot_protein_kg_year_milk)+(ghgtot_t_co2eq_yr/tot_protein_kg_year_meat))))
water_requirement <- output[["water_required"]]
water_use_for_production <- as.data.frame(water_requirement[["water_use_for_production"]])
percent_of_precipitation_used_for_feed_production <- water_use_for_production[which(water_use_for_production$Names=="fraction_of_precipitation_used_for_feed_production"),2]*100
water_m3_yr <-water_use_for_production[which(water_use_for_production$Names=="total_water_use"),2]
waterha_m3_ha <- water_m3_yr/sum(land_required$area_feed)
water_use_perkg_fpcm <- water_use_for_production[which(water_use_for_production$Names=="water_use_fpcm"),2]
water_use_perkg_meat <- water_use_for_production[which(water_use_for_production$Names=="water_use_meat"),2]
water_use_perkg_protein <- water_use_for_production[which(water_use_for_production$Names=="water_use_protein"),2]
scenarioList[[i]] <- data.frame(scenario,
average_annual_milk_kg_yr,
soil_mining_perc,
soil_leaching_perc,
erosion_tyr,
erosion_thayr,
erosion_kgsoil_kg_fpcm,
land_requirement_ha,
total_land_required_ha_mt_fpcm,
ghgtot_t_co2eq_yr,
ghgtot_t_co2eq_ha_yr,
ghgmilk_kg_co2eq_kg,
ghgmeat_kg_co2eq_kg,
ghgprotein_kg_co2eq_kg,
percent_of_precipitation_used_for_feed_production,
water_m3_yr,
waterha_m3_ha,
water_use_perkg_fpcm,
water_use_perkg_meat,
water_use_perkg_protein)
}
}
results <- scenarioList %>% dplyr::bind_rows()
write(jsonlite::toJSON(results, pretty = TRUE),output_path)
rm(list = ls())
calculate_differences <- function(a,b,c,...){
outputList <- list(...)
output_path <- outputList[[1]] # output directory
outputList[[1]] <- NULL
if (length(outputList) == 0) {
stop("No files in source directory")
} else {
scenarioList <- list()
for (i in 2:length(outputList)){
scenario <- i
output <- jsonlite::fromJSON(outputList[[i]], flatten = TRUE)
nitrogen_balance <- output[["nitrogen_balance"]]
soil_mining_perc <- sum(nitrogen_balance[nitrogen_balance$area_total > 0.9,]$area_total)*100/sum(nitrogen_balance$area_total)
soil_leaching_perc <- sum(nitrogen_balance[nitrogen_balance$area_total < 0.5,]$area_total)*100/sum(nitrogen_balance$area_total)
erosion_tyr <- sum(as.numeric(output[["soil_erosion"]]$soil_loss_plot))
land_required <- output[["land_required"]] %>%
dplyr::bind_rows()
erosion_thayr <- sum(land_required$area_feed)/erosion_tyr
average_annual_milk_kg_yr <- sum(output[["livestock_productivity"]]$total_milk)
erosion_kgsoil_kg_fpcm <- ifelse(is.na(erosion_tyr/sum(output[["livestock_productivity"]]$total_milk)), 0, erosion_tyr/sum(output[["livestock_productivity"]]$total_milk))*1000
land_requirement_ha <- sum(land_required$area_feed)
total_land_required_ha_mt_fpcm <- ifelse(is.na(land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk)), 0, land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk))*1000
ghg_emission <- output[["ghg_emission"]]
ghgtot_t_co2eq_yr <- (sum(ghg_emission$kg_per_ha,na.rm = T)/1000)*land_requirement_ha
ghgtot_t_co2eq_ha_yr <- sum(ghg_emission$kg_per_ha,na.rm = T)/1000
ghgmeat_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal))
ghgmilk_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk))
tot_protein_kg_year_meat <- sum(output[["livestock_productivity"]]$protein_kg_year_meat)
tot_protein_kg_year_milk <- sum(output[["livestock_productivity"]]$protein_kg_year_milk)
ghgprotein_kg_co2eq_kg <- ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk == 0,0,
ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk != 0, ghgtot_t_co2eq_yr/tot_protein_kg_year_milk,
ifelse(tot_protein_kg_year_meat!=0 & tot_protein_kg_year_milk == 0,ghgtot_t_co2eq_yr/tot_protein_kg_year_meat,
(ghgtot_t_co2eq_yr/tot_protein_kg_year_milk)+(ghgtot_t_co2eq_yr/tot_protein_kg_year_meat))))
water_requirement <- output[["water_required"]]
water_use_for_production <- as.data.frame(water_requirement[["water_use_for_production"]])
percent_of_precipitation_used_for_feed_production <- water_use_for_production[which(water_use_for_production$Names=="fraction_of_precipitation_used_for_feed_production"),2]*100
water_m3_yr <-water_use_for_production[which(water_use_for_production$Names=="total_water_use"),2]
waterha_m3_ha <- water_m3_yr/sum(land_required$area_feed)
water_use_perkg_fpcm <- water_use_for_production[which(water_use_for_production$Names=="water_use_fpcm"),2]
water_use_perkg_meat <- water_use_for_production[which(water_use_for_production$Names=="water_use_meat"),2]
water_use_perkg_protein <- water_use_for_production[which(water_use_for_production$Names=="water_use_protein"),2]
scenarioList[[i]] <- data.frame(scenario,
average_annual_milk_kg_yr,
soil_mining_perc,
soil_leaching_perc,
erosion_tyr,
erosion_thayr,
erosion_kgsoil_kg_fpcm,
land_requirement_ha,
total_land_required_ha_mt_fpcm,
ghgtot_t_co2eq_yr,
ghgtot_t_co2eq_ha_yr,
ghgmilk_kg_co2eq_kg,
ghgmeat_kg_co2eq_kg,
ghgprotein_kg_co2eq_kg,
percent_of_precipitation_used_for_feed_production,
water_m3_yr,
waterha_m3_ha,
water_use_perkg_fpcm,
water_use_perkg_meat,
water_use_perkg_protein)
}
}
results <- scenarioList %>% dplyr::bind_rows()
write(jsonlite::toJSON(results, pretty = TRUE),output_path)
}
calculate_differences("C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/steve_test.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
calculate_differences("C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/steve_test.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
calculate_differences <- function(outDir,...){
output_path <- outDir # output directory
outputList <- list(...)
outputList[[1]] <- NULL
if (length(outputList) == 0) {
stop("No files in source directory")
} else {
scenarioList <- list()
for (i in 2:length(outputList)){
scenario <- i
output <- jsonlite::fromJSON(outputList[[i]], flatten = TRUE)
nitrogen_balance <- output[["nitrogen_balance"]]
soil_mining_perc <- sum(nitrogen_balance[nitrogen_balance$area_total > 0.9,]$area_total)*100/sum(nitrogen_balance$area_total)
soil_leaching_perc <- sum(nitrogen_balance[nitrogen_balance$area_total < 0.5,]$area_total)*100/sum(nitrogen_balance$area_total)
erosion_tyr <- sum(as.numeric(output[["soil_erosion"]]$soil_loss_plot))
land_required <- output[["land_required"]] %>%
dplyr::bind_rows()
erosion_thayr <- sum(land_required$area_feed)/erosion_tyr
average_annual_milk_kg_yr <- sum(output[["livestock_productivity"]]$total_milk)
erosion_kgsoil_kg_fpcm <- ifelse(is.na(erosion_tyr/sum(output[["livestock_productivity"]]$total_milk)), 0, erosion_tyr/sum(output[["livestock_productivity"]]$total_milk))*1000
land_requirement_ha <- sum(land_required$area_feed)
total_land_required_ha_mt_fpcm <- ifelse(is.na(land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk)), 0, land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk))*1000
ghg_emission <- output[["ghg_emission"]]
ghgtot_t_co2eq_yr <- (sum(ghg_emission$kg_per_ha,na.rm = T)/1000)*land_requirement_ha
ghgtot_t_co2eq_ha_yr <- sum(ghg_emission$kg_per_ha,na.rm = T)/1000
ghgmeat_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal))
ghgmilk_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk))
tot_protein_kg_year_meat <- sum(output[["livestock_productivity"]]$protein_kg_year_meat)
tot_protein_kg_year_milk <- sum(output[["livestock_productivity"]]$protein_kg_year_milk)
ghgprotein_kg_co2eq_kg <- ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk == 0,0,
ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk != 0, ghgtot_t_co2eq_yr/tot_protein_kg_year_milk,
ifelse(tot_protein_kg_year_meat!=0 & tot_protein_kg_year_milk == 0,ghgtot_t_co2eq_yr/tot_protein_kg_year_meat,
(ghgtot_t_co2eq_yr/tot_protein_kg_year_milk)+(ghgtot_t_co2eq_yr/tot_protein_kg_year_meat))))
water_requirement <- output[["water_required"]]
water_use_for_production <- as.data.frame(water_requirement[["water_use_for_production"]])
percent_of_precipitation_used_for_feed_production <- water_use_for_production[which(water_use_for_production$Names=="fraction_of_precipitation_used_for_feed_production"),2]*100
water_m3_yr <-water_use_for_production[which(water_use_for_production$Names=="total_water_use"),2]
waterha_m3_ha <- water_m3_yr/sum(land_required$area_feed)
water_use_perkg_fpcm <- water_use_for_production[which(water_use_for_production$Names=="water_use_fpcm"),2]
water_use_perkg_meat <- water_use_for_production[which(water_use_for_production$Names=="water_use_meat"),2]
water_use_perkg_protein <- water_use_for_production[which(water_use_for_production$Names=="water_use_protein"),2]
scenarioList[[i]] <- data.frame(scenario,
average_annual_milk_kg_yr,
soil_mining_perc,
soil_leaching_perc,
erosion_tyr,
erosion_thayr,
erosion_kgsoil_kg_fpcm,
land_requirement_ha,
total_land_required_ha_mt_fpcm,
ghgtot_t_co2eq_yr,
ghgtot_t_co2eq_ha_yr,
ghgmilk_kg_co2eq_kg,
ghgmeat_kg_co2eq_kg,
ghgprotein_kg_co2eq_kg,
percent_of_precipitation_used_for_feed_production,
water_m3_yr,
waterha_m3_ha,
water_use_perkg_fpcm,
water_use_perkg_meat,
water_use_perkg_protein)
}
}
results <- scenarioList %>% dplyr::bind_rows()
write(jsonlite::toJSON(results, pretty = TRUE),output_path)
}
calculate_differences("C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/steve_test.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
calculate_differences <- function(outDir,...){
outputList <- list(outDir = outDir,...)
output_path <- outputList[["outDir"]]
outputList[[1]] <- NULL
if (length(outputList) == 0) {
stop("No files in source directory")
} else {
scenarioList <- list()
for (i in 1:length(outputList)){
scenario <- i
output <- jsonlite::fromJSON(outputList[[i]], flatten = TRUE)
nitrogen_balance <- output[["nitrogen_balance"]]
soil_mining_perc <- sum(nitrogen_balance[nitrogen_balance$area_total > 0.9,]$area_total)*100/sum(nitrogen_balance$area_total)
soil_leaching_perc <- sum(nitrogen_balance[nitrogen_balance$area_total < 0.5,]$area_total)*100/sum(nitrogen_balance$area_total)
erosion_tyr <- sum(as.numeric(output[["soil_erosion"]]$soil_loss_plot))
land_required <- output[["land_required"]] %>%
dplyr::bind_rows()
erosion_thayr <- sum(land_required$area_feed)/erosion_tyr
average_annual_milk_kg_yr <- sum(output[["livestock_productivity"]]$total_milk)
erosion_kgsoil_kg_fpcm <- ifelse(is.na(erosion_tyr/sum(output[["livestock_productivity"]]$total_milk)), 0, erosion_tyr/sum(output[["livestock_productivity"]]$total_milk))*1000
land_requirement_ha <- sum(land_required$area_feed)
total_land_required_ha_mt_fpcm <- ifelse(is.na(land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk)), 0, land_requirement_ha/sum(output[["livestock_productivity"]]$total_milk))*1000
ghg_emission <- output[["ghg_emission"]]
ghgtot_t_co2eq_yr <- (sum(ghg_emission$kg_per_ha,na.rm = T)/1000)*land_requirement_ha
ghgtot_t_co2eq_ha_yr <- sum(ghg_emission$kg_per_ha,na.rm = T)/1000
ghgmeat_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$meat_production_animal))
ghgmilk_kg_co2eq_kg <- ifelse(is.na(ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk)), 0, ghgtot_t_co2eq_yr/sum(output[["livestock_productivity"]]$total_milk))
tot_protein_kg_year_meat <- sum(output[["livestock_productivity"]]$protein_kg_year_meat)
tot_protein_kg_year_milk <- sum(output[["livestock_productivity"]]$protein_kg_year_milk)
ghgprotein_kg_co2eq_kg <- ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk == 0,0,
ifelse(tot_protein_kg_year_meat==0 & tot_protein_kg_year_milk != 0, ghgtot_t_co2eq_yr/tot_protein_kg_year_milk,
ifelse(tot_protein_kg_year_meat!=0 & tot_protein_kg_year_milk == 0,ghgtot_t_co2eq_yr/tot_protein_kg_year_meat,
(ghgtot_t_co2eq_yr/tot_protein_kg_year_milk)+(ghgtot_t_co2eq_yr/tot_protein_kg_year_meat))))
water_requirement <- output[["water_required"]]
water_use_for_production <- as.data.frame(water_requirement[["water_use_for_production"]])
percent_of_precipitation_used_for_feed_production <- water_use_for_production[which(water_use_for_production$Names=="fraction_of_precipitation_used_for_feed_production"),2]*100
water_m3_yr <-water_use_for_production[which(water_use_for_production$Names=="total_water_use"),2]
waterha_m3_ha <- water_m3_yr/sum(land_required$area_feed)
water_use_perkg_fpcm <- water_use_for_production[which(water_use_for_production$Names=="water_use_fpcm"),2]
water_use_perkg_meat <- water_use_for_production[which(water_use_for_production$Names=="water_use_meat"),2]
water_use_perkg_protein <- water_use_for_production[which(water_use_for_production$Names=="water_use_protein"),2]
scenarioList[[i]] <- data.frame(scenario,
average_annual_milk_kg_yr,
soil_mining_perc,
soil_leaching_perc,
erosion_tyr,
erosion_thayr,
erosion_kgsoil_kg_fpcm,
land_requirement_ha,
total_land_required_ha_mt_fpcm,
ghgtot_t_co2eq_yr,
ghgtot_t_co2eq_ha_yr,
ghgmilk_kg_co2eq_kg,
ghgmeat_kg_co2eq_kg,
ghgprotein_kg_co2eq_kg,
percent_of_precipitation_used_for_feed_production,
water_m3_yr,
waterha_m3_ha,
water_use_perkg_fpcm,
water_use_perkg_meat,
water_use_perkg_protein)
}
}
results <- scenarioList %>% dplyr::bind_rows()
write(jsonlite::toJSON(results, pretty = TRUE),output_path)
}
calculate_differences("C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/steve_test.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
packageVersion("cleaned")
if (packageVersion("cleaned") != ‘0.3.1’) {
print("NO")
}else{print("yes")}
if (packageVersion("cleaned") != '0.3.1') {
print("NO")
}else{print("yes")}
library(cleaned)
rm(list = ls())
library(jsonlite)
library(tidyverse)
para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
ghg_ipcc_data <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
energy_parameters <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
stock_change_para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
feed_basket_quality <- feed_quality(para)
energy_required <- energy_requirement(para,feed_basket_quality,energy_parameters)
land_required <- land_requirement(feed_basket_quality, energy_required, para)
soil_erosion <- soil_health(para, land_required)
water_required <- water_requirement(para, land_required)
nitrogen_balance <- n_balance(para, land_required, soil_erosion)
livestock_productivity <- land_productivity(para)
economics <- economics_payback(para, energy_required, livestock_productivity)
biomass <- biomass_calculation(para, land_required)
soil_carbon <- soil_organic_carbon(para, stock_change_para, land_required, biomass)
ghg_emissions <- ghg_emission(para,energy_required,ghg_ipcc_data,land_required,nitrogen_balance)
bp <-  combineOutputs(feed_basket_quality,energy_required,land_required,soil_erosion,water_required,
nitrogen_balance,livestock_productivity,economics,biomass,soil_carbon,ghg_emissions)
write(bp, "C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
feed_basket_quality <- feed_quality(para)
energy_required <- energy_requirement(para,feed_basket_quality,energy_parameters)
land_required <- land_requirement(feed_basket_quality, energy_required, para)
soil_erosion <- soil_health(para, land_required)
water_required <- water_requirement(para, land_required)
nitrogen_balance <- n_balance(para, land_required, soil_erosion)
livestock_productivity <- land_productivity(para)
economics <- economics_payback(para, energy_required, livestock_productivity)
biomass <- biomass_calculation(para, land_required)
soil_carbon <- soil_organic_carbon(para, stock_change_para, land_required, biomass)
ghg_emissions <- ghg_emission(para,energy_required,ghg_ipcc_data,land_required,nitrogen_balance)
lb <-  combineOutputs(feed_basket_quality,energy_required,land_required,soil_erosion,water_required,
nitrogen_balance,livestock_productivity,economics,biomass,soil_carbon,ghg_emissions)
write(lb, "C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json")
para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
feed_basket_quality <- feed_quality(para)
energy_required <- energy_requirement(para,feed_basket_quality,energy_parameters)
land_required <- land_requirement(feed_basket_quality, energy_required, para)
soil_erosion <- soil_health(para, land_required)
water_required <- water_requirement(para, land_required)
nitrogen_balance <- n_balance(para, land_required, soil_erosion)
livestock_productivity <- land_productivity(para)
economics <- economics_payback(para, energy_required, livestock_productivity)
biomass <- biomass_calculation(para, land_required)
soil_carbon <- soil_organic_carbon(para, stock_change_para, land_required, biomass)
ghg_emissions <- ghg_emission(para,energy_required,ghg_ipcc_data,land_required,nitrogen_balance)
bp <-  combineOutputs(feed_basket_quality,energy_required,land_required,soil_erosion,water_required,
nitrogen_balance,livestock_productivity,economics,biomass,soil_carbon,ghg_emissions)
write(bp, "C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_PB.json")
calculate_differences("C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/steve_test.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_LB.json","C:/Users/Soloo/OneDrive - CGIAR/Documents/ILRI work/Projects/CLEANED-XtRa/outputs/output_SB_II_PB.json")
library(cleaned)
library(jsonlite)
library(tidyverse)
para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
ghg_ipcc_data <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
energy_parameters <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
stock_change_para <- fromJSON(file.choose(),  flatten = TRUE, simplifyDataFrame = TRUE)
feed_basket_quality <- feed_quality(para)
energy_required <- energy_requirement(para,feed_basket_quality,energy_parameters)
land_required <- land_requirement(feed_basket_quality, energy_required, para)
soil_erosion <- soil_health(para, land_required)
water_required <- water_requirement(para, land_required)
feed_types <- unique(land_required[["land_requirements_all"]]$feed)
feed_types
n_balance <- list()
feed <- "Maize (Zea mays) - cracked grains IP"
feed_production <- unnest(para[["feed_items"]], cols = c(feed_type_name))
feed_selected_frac <- land_required[["feed_items_frac"]] %>%
as.data.frame() %>%
dplyr::filter(feed_item_name == feed)
View(feed_selected_frac)
feed_selected <- feed_production[feed_production$feed_item_name == feed,]
View(feed_selected)
dry_yield <- feed_selected_frac$dry_yield
residue_dry_yield <- feed_selected_frac$residue_dry_yield
main_n <- feed_selected_frac$main_n
residue_n <- as.numeric(feed_selected$residue_n)
n_fixing <- ifelse(feed_selected$category == "Legume", 0.5*(residue_n*residue_dry_yield+main_n*dry_yield)*1000, 0)
feed_selected_land_required <- land_required[["land_requirements_all"]][land_required[["land_requirements_all"]]$feed == feed,]
View(feed_selected_land_required)
area_total <- sum(feed_selected_land_required$area_feed)
manure_fraction <- as.numeric(feed_selected$fraction_as_manure)
fertilizer_rate <- as.numeric(feed_selected$fraction_as_fertilizer)
main_product_removal <- as.numeric(feed_selected$main_product_removal)
residue_removal <- as.numeric(feed_selected$residue_removal)
view(energy_required[["annual_results"]])
sum_n_content_manure_grazing <- energy_required[["annual_results"]] %>%
as.data.frame() %>%
summarise(sum(n_content_manure_grazing)) %>%
as.numeric()
yield_dm_ha <- as.numeric(dry_yield)*1000
main_product_removed_kg_ha <- yield_dm_ha*main_product_removal
n_content_manure_collected <- energy_required[["annual_results"]] %>%
as.data.frame() %>%
summarise(sum(n_content_manure_collected)) %>%
as.numeric()
sum_n_content_manure_grazing <- energy_required[["annual_results"]] %>%
as.data.frame() %>%
summarise(sum(n_content_manure_grazing)) %>%
as.numeric()
yield_dm_ha <- as.numeric(dry_yield)*1000
main_product_removed_kg_ha <- yield_dm_ha*main_product_removal
n_content_manure_collected <- energy_required[["annual_results"]] %>%
as.data.frame() %>%
summarise(sum(n_content_manure_collected)) %>%
as.numeric()
animal_manure_collected <- n_content_manure_collected*manure_fraction
organic_n_imported <- manure_fraction*(as.numeric(para$purchased_manure)+as.numeric(para$purchased_compost)+as.numeric(para$purchased_organic_n)+as.numeric(para$purchased_bedding))
crop_residue_dm_ha <- as.numeric(feed_selected_frac$residue_dry_yield)*1000
residue_removal <- as.numeric(feed_selected$residue_removal)
main_product_removed_kg <- area_total*main_product_removed_kg_ha
residue_removed_dm_ha <- crop_residue_dm_ha*residue_removal
residue_removed_kg <- area_total*residue_removed_dm_ha
annual_precipitation <- as.numeric(para[["annual_prec"]])
soil_n <- as.numeric(para[["soil_n"]])
ntot_kg_ha_20cm <- soil_n*20*as.numeric(para[["soil_bulk"]])*10
n_mineralized_kg_ha_year <- ntot_kg_ha_20cm*0.03
# Soil type
soil_type <- para[["soil_description"]]
# Soil carbon
soil_c <- as.numeric(para[["soil_c"]])
# Soil clay
soil_clay <- as.numeric(para[["soil_clay"]])
# N content (kg N/kg DM)
ncrop <- as.numeric(feed_selected$main_n)
# N content (kg N /kg DM)
nres <- as.numeric(feed_selected$residue_n)
# Mineral fertilizer
in1 <- area_total*fertilizer_rate
# Atmospheric deposition
in3 <- 0.14*sqrt(annual_precipitation)*area_total
# Non-symbiotic N fixation
in4a <- ifelse(area_total > 0, (2 + (annual_precipitation - 1350) * 0.005) * area_total, 0)
# Symbiotic N-fixation
in4b <- n_fixing * area_total
# Crop yield  (kgN)
out1 <- area_total*main_product_removed_kg_ha*ncrop
# Crop residue (KgN)
out2 <- ifelse(feed_selected$source_type == "Main", 0, residue_removed_dm_ha * nres * area_total)
# soil loss per plot per feed type
soil_loss_plot <- as.numeric(soil_erosion[soil_erosion$feed_type == feed,]$soil_loss_plot)
# Soil erosion
out5 <- soil_loss_plot*soil_n*1.5
evans.ochieng@syngenta.com
0704999704
library(cleaned)
exp(-1.996+2.32*ln(dbh))
ln(0)
log(0)
log(10)
ln(1)
